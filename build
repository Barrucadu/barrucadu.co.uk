#!/usr/bin/env python3

"""build

Usage:
  build [--out=<dir>] [--root=<url>]
  build (-h | --help)

Options:
  -h --help       Show this screen.
  --out=<dir>     Directory to generate site in [default: _site]
  --root=<url>    Root of the website [default: https://www.barrucadu.co.uk/]

"""

import hashlib
import jinja2
import markdown
import os
import yaml

from distutils import dir_util, file_util
from docopt import docopt


args = docopt(__doc__)
OUT_DIR = args["--out"]
BASE_HREF = args["--root"]

JINJA2_ENV = jinja2.Environment(
    autoescape=jinja2.select_autoescape(["html", "xml"]),
    loader=jinja2.FileSystemLoader("_templates"),
)

dir_util.copy_tree("static", OUT_DIR)

HASHED_LINKS = {}
for fname in os.listdir("hashed-static"):
    fpath = os.path.join("hashed-static", fname)
    if not os.path.isfile(fpath):
        continue

    file_hash = hashlib.sha256()
    with open(fpath, "rb") as f:
        while True:
            data = f.read(65536)
            if not data:
                break
            file_hash.update(data)
    base, ext = os.path.splitext(fname)
    HASHED_LINKS[fname] = f"{base}-sha256-{file_hash.hexdigest()}{ext}"
    file_util.copy_file(fpath, os.path.join(OUT_DIR, HASHED_LINKS[fname]))

ALL_PAGES = []
for fname in os.listdir("pages"):
    fpath = os.path.join("pages", fname)
    if not os.path.isfile(fpath):
        continue

    with open(fpath, "r") as f:
        lines = f.readlines()
        metadata_end_idx = lines[1:].index("---\n") + 1
        text_start_idx = metadata_end_idx + 1
        page = yaml.load("".join(lines[1:metadata_end_idx]), Loader=yaml.SafeLoader)
        if "slug" not in page:
            page["slug"], _ = os.path.splitext(os.path.basename(fpath))
        page["permalink"] = f"{BASE_HREF}{page['slug']}.html"
        page["date_iso"] = page["date"].strftime("%Y-%m-%d")
        page["date_pp"] = page["date"].strftime("%B %-d, %Y")
        page["text"] = "".join(lines[text_start_idx:])
        page["body"] = markdown.markdown(page["text"], output_format="html5", extensions=["smarty"])
    ALL_PAGES.append(page)


def render(link, template, **metadata):
    with open(os.path.join(OUT_DIR, link), "w") as f:
        rendered = JINJA2_ENV.get_template(template).render(
            base_href=BASE_HREF,
            hashed_links=HASHED_LINKS,
            permalink=f"{BASE_HREF}{link}",
            link=link,
            **metadata,
        )
        print(rendered, file=f)


with open("barrucadu.yaml", "r") as f:
    index_metadata = yaml.load(f, Loader=yaml.SafeLoader)
    render("index.html", "index.html", title="barrucadu", **index_metadata)

render("robots.txt", "robots.txt")
render("sitemap.xml", "sitemap.xml", pages=ALL_PAGES)

for page in ALL_PAGES:
    render(f"{page['slug']}.html", "page.html", title=page["title"], page=page)
